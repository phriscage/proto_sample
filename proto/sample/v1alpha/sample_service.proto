/*
MIT License

Copyright (c) 2023 phriscage

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
syntax="proto3";

package sample.v1alpha;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "sample/v1alpha/book.proto";
import "sample/v1alpha/config.proto";

option go_package="github.com/phriscage/proto_sample/gen/go/sample/v1alpha";

// Sample Service
service SampleService {

    // Gets the Config
    rpc GetConfig(google.protobuf.Empty) returns (Config) {
        // Client Example:
        //     curl /config
        option (google.api.http) = {
            get: "/v1alpha/config"
        };
    }

    // Creates the Config
    rpc CreateConfig(CreateConfigRequest) returns (CreateConfigResponse) {
        // Client Example:
        //     curl -d '{"name": "my-sample-config", "environment": "development", ...}'
        option (google.api.http) = {
            post: "/v1alpha/config"
            body: "config"
        };
    }

    // Gets a Book
    rpc GetBook(GetBookRequest) returns (Book) {
        // Client Example:
        //     curl /books/{name}
        option (google.api.http) = {
            get: "/v1alpha/books/{name}"
        };
    }

    // Creates a Book
    rpc CreateBook(CreateBookRequest) returns (CreateBookResponse) {
        // Client Example:
        //     curl -d '{"name": "my-sample-book", "environment": "development", ...}'
        option (google.api.http) = {
            post: "/v1alpha/books"
            body: "book"
            // additional_bindings: {
            //    post: "/v1alpha/books:create"
            //    body: "book.data"
            // }
        };
    }

    // List Books
    rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
        // Client Example:
        //     curl /books'
        option (google.api.http) = {
            get: "/v1alpha/books"
        };
    }
}

// Request message for CreateConfig method
message CreateConfigRequest {
    // Specifiy the system environment config
    Config config = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request response for CreateConfig method
message CreateConfigResponse {
    string status_message = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Request message for GetCreateBook method
message GetBookRequest {
    // Name of the Book
    //     Example: `my-sample-book`
    string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for CreateBook method
message CreateBookRequest {
    // Specifiy the Book fields
    Book book = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request response for CreateBook method
message CreateBookResponse {
    string status_message = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Request message for ListBooks method
message ListBooksRequest {
    // Specify the Book name prefix. Matches with wildcard at the end
    string name_prefix = 1;
    enum OrderBy {
        DEFAULT = 0;
        NAME = 1;
        CREATED_AT = 2;
    }
    // Specify the Order By enum to sort the results by column to be returned by the server.
    OrderBy order_by = 2;
    // Specify the maximum number of results to be returned by the server.
    // If the page_size is 0, the server will decide the number of results to be returned.
    int32 page_size = 3;
    // This field represents the pagination token to retrieve the next page of results.
    string page_token = 4;
}

// Request response for ListBooks method
message ListBooksResponse {
    string status_message = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
    // List of Books matching ListBooksRequest filter
    repeated Book items = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    // This field represents the pagination token to retrieve the next page of results.
    // If the value is "", it means no further results for the request.
    string next_page_token = 3;
    // The total count of items
    uint32 total_size = 4;
}
